const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('queue')
        .setDescription('Xem danh s√°ch nh·∫°c ch·ªù'),

    async execute(interaction) {
        try {
            const queue = interaction.client.musicManager.getQueue(interaction.guild.id);

            if (!queue) {
                return await interaction.reply({
                    content: '‚ùå Kh√¥ng c√≥ queue n√†o!',
                    ephemeral: true
                });
            }

            const currentSong = interaction.client.musicManager.getNowPlaying(interaction.guild.id);
            const queueList = interaction.client.musicManager.getQueueList(interaction.guild.id);

            const embed = new EmbedBuilder()
                .setColor('#0099ff')
                .setTitle('üéµ Queue nh·∫°c')
                .setTimestamp();

            // B√†i ƒëang ph√°t
            if (currentSong) {
                embed.addFields({
                    name: 'üéµ ƒêang ph√°t',
                    value: `**${currentSong.title}**\nüë§ Y√™u c·∫ßu b·ªüi: ${currentSong.requestedBy}`,
                    inline: false
                });
            }

            // Danh s√°ch ch·ªù
            if (queueList.length > 0) {
                let queueText = '';
                const maxSongs = 10; // Hi·ªÉn th·ªã t·ªëi ƒëa 10 b√†i

                for (let i = 0; i < Math.min(queueList.length, maxSongs); i++) {
                    const song = queueList[i];
                    queueText += `**${i + 1}.** ${song.title}\nüë§ ${song.requestedBy}\n\n`;
                }

                if (queueList.length > maxSongs) {
                    queueText += `... v√† ${queueList.length - maxSongs} b√†i kh√°c`;
                }

                embed.addFields({
                    name: `üìã Danh s√°ch ch·ªù (${queueList.length} b√†i)`,
                    value: queueText || 'Tr·ªëng',
                    inline: false
                });
            } else {
                embed.addFields({
                    name: 'üìã Danh s√°ch ch·ªù',
                    value: 'Tr·ªëng',
                    inline: false
                });
            }

            // Th√¥ng tin th√™m
            if (!currentSong && queueList.length === 0) {
                embed.setDescription('Queue hi·ªán t·∫°i tr·ªëng. S·ª≠ d·ª•ng `/play` ƒë·ªÉ th√™m nh·∫°c!');
            }

            await interaction.reply({ embeds: [embed] });

        } catch (error) {
            console.error('‚ùå L·ªói trong command queue:', error);
            await interaction.reply({
                content: '‚ùå C√≥ l·ªói x·∫£y ra khi hi·ªÉn th·ªã queue!',
                ephemeral: true
            });
        }
    }
};
