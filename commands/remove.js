const { SlashCommandBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('remove')
        .setDescription('X√≥a m·ªôt b√†i h√°t kh·ªèi queue')
        .addIntegerOption(option =>
            option.setName('position')
                .setDescription('V·ªã tr√≠ c·ªßa b√†i h√°t trong queue (1, 2, 3...)')
                .setRequired(true)
                .setMinValue(1)
        ),

    async execute(interaction) {
        try {
            // Ki·ªÉm tra user c√≥ trong voice channel kh√¥ng
            const voiceChannel = interaction.member.voice.channel;
            if (!voiceChannel) {
                return await interaction.reply({
                    content: '‚ùå B·∫°n c·∫ßn v√†o voice channel tr∆∞·ªõc!',
                    ephemeral: true
                });
            }

            // Ki·ªÉm tra bot c√≥ trong c√πng voice channel kh√¥ng
            const botVoiceChannel = interaction.guild.members.me.voice.channel;
            if (botVoiceChannel && botVoiceChannel.id !== voiceChannel.id) {
                return await interaction.reply({
                    content: '‚ùå B·∫°n c·∫ßn ·ªü c√πng voice channel v·ªõi bot!',
                    ephemeral: true
                });
            }

            await interaction.deferReply();

            // Ki·ªÉm tra c√≥ queue kh√¥ng
            const queue = interaction.client.musicManager.getQueue(interaction.guild.id);
            if (!queue) {
                return await interaction.editReply({
                    content: '‚ùå Kh√¥ng c√≥ queue n√†o ƒë·ªÉ x√≥a!',
                    ephemeral: true
                });
            }

            // Ki·ªÉm tra queue c√≥ b√†i h√°t kh√¥ng
            if (queue.tracks.size === 0) {
                return await interaction.editReply({
                    content: '‚ùå Queue hi·ªán t·∫°i tr·ªëng!',
                    ephemeral: true
                });
            }

            const position = interaction.options.getInteger('position');

            // Th·ª±c hi·ªán x√≥a b√†i h√°t
            const result = interaction.client.musicManager.removeTrack(interaction.guild.id, position);

            if (result.success) {
                await interaction.editReply({
                    content: `üóëÔ∏è ${result.message}\nüí° S·ª≠ d·ª•ng \`/queue\` ƒë·ªÉ xem queue hi·ªán t·∫°i`
                });
            } else {
                await interaction.editReply({
                    content: `‚ùå ${result.message}`,
                    ephemeral: true
                });
            }

        } catch (error) {
            console.error('‚ùå L·ªói trong command remove:', error);
            
            const errorMessage = '‚ùå C√≥ l·ªói x·∫£y ra khi x√≥a b√†i h√°t!';
            
            if (interaction.deferred) {
                await interaction.editReply({ content: errorMessage });
            } else {
                await interaction.reply({ content: errorMessage, ephemeral: true });
            }
        }
    }
};
